{% extends 'cookie-consent-manager/_layouts/settings' %}

{% import "_includes/forms" as forms %}

{% set selectedNavItem = 'general' %}

{% block content %}

    <form method="post" accept-charset="UTF-8" data-saveshortcut data-confirm-unload>
        {{ actionInput('cookie-consent-manager/settings/save') }}
        {{ csrfInput() }}

        {{ craft.cp.field('template:cookie-consent-manager/_includes/fields/mode', {
            first: true,
            label: 'Mode'|t('cookie-consent-manager'),
            name: 'mode',
            instructions: 'When should scripts run?'|t('cookie-consent-manager'),
            options: [
                { value: 'opt-in', label: '<b>Opt-in</b>: scripts will not run unless consent is given (gdpr compliant)'|t('cookie-consent-manager') },
                { value: 'opt-out', label: '<b>Opt-out</b>: scripts — that have categories set as enabled by default — will run without consent, until an explicit choice is made'|t('cookie-consent-manager') },
            ],
            value: settings.mode,
        })|raw }}

        {{ forms.lightswitchField({
            label: 'Auto show'|t('cookie-consent-manager'),
            instructions: 'Automatically show the consent modal if consent is not valid.'|t('cookie-consent-manager'),
            name: 'autoShow',
            on: settings.autoShow,
        }) }}

        {{ forms.lightswitchField({
            label: 'Auto clear cookies'|t('cookie-consent-manager'),
            instructions: 'Clears cookies when user rejects a specific category.'|t('cookie-consent-manager'),
            name: 'autoClearCookies',
            on: settings.autoClearCookies,
        }) }}

        {{ forms.lightswitchField({
            label: 'Hide from bots'|t('cookie-consent-manager'),
            instructions: 'Stops the plugin\'s execution when a bot/crawler is detected, to prevent them from indexing the modal\'s content.'|t('cookie-consent-manager'),
            name: 'hideFromBots',
            on: settings.hideFromBots,
        }) }}

        {{ forms.lightswitchField({
            label: 'Disable page interaction'|t('cookie-consent-manager'),
            instructions: 'Creates a dark overlay and blocks the page scroll until consent is expressed.'|t('cookie-consent-manager'),
            name: 'disablePageInteraction',
            on: settings.disablePageInteraction,
        }) }}

        <div class="buttons">
            {{ forms.submitButton({label: 'Save'|t('app')}) }}
        </div>

    </form>

{% endblock %}
